---
# tasks file for setup
- name: validate dependencies
  import_tasks: validate.yml
  vars:
    files:
      - '{{ setup_insights_client_cmd }}'
  tags:
    - validate

- name: Ensure needed variables are set
  fail:
    msg: 'You must supply "-e {{ item }}=<{{ item }}>".'
  when: 'item is not defined'
  with_items:
    - OCP_API
    - OCP_TOKEN_PATH
    - OCP_METERING_NAMESPACE
    - METERING_API

- name: Check that OCP_TOKEN_PATH exists
  stat:
    path: '{{ OCP_TOKEN_PATH }}'
  register: ocp_token_stat_result

- name: OCP_TOKEN_PATH does not exits
  fail:
    msg: 'No file was found for OCP_TOKEN_PATH at "{{ OCP_TOKEN_PATH }}".'
  when:
    - not ocp_token_stat_result.stat.exists

- name: Set OCP SSL certificate validation
  set_fact:
    ocp_validate_cert: '{{ OCP_SSL_CERT_VALIDATION | bool }}'
    ocp_insecure_login: '--insecure-skip-tls-verify={{ OCP_SSL_CERT_VALIDATION | bool }}'
  when:
    - OCP_SSL_CERT_VALIDATION is defined
    - '{{ OCP_SSL_CERT_VALIDATION | bool }}'

- name: Set OCP SSL certificate validation default
  set_fact:
    ocp_validate_cert: '{{ setup_default_validate_cert }}'
    ocp_insecure_login: '--insecure-skip-tls-verify=true'
  when:
    - ocp_validate_cert is not defined

- name: Check for OC command-line
  stat:
    path: '{{ OCP_CLI }}'
  register: check_oc

- name: OCP_CLI does not exits
  fail:
    msg: 'No file was found for OCP_CLI at "{{ OCP_CLI }}".'
  when:
    - not check_oc.stat.exists

- name: Check python dependencies
  python_requirements_info:
    dependencies:
      - openshift
      - requests

- name: Get a Cluster Version object
  k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: cluster_version_object
  when:
    - ocp_cluster_id is not defined

- name: Extract clusterID from Cluster Version object
  set_fact:
    ocp_cluster_id: '{{ cluster_version_object.resources[0].get("spec", {}).get("clusterID") }}'
  when:
    - cluster_version_object is defined
    - ocp_cluster_id is not defined

- name: Could not obtain OpenShift Cluster ID
  fail:
    msg: 'Unable to obtain the OpenShift Cluster ID.'
  when:
    - ocp_cluster_id is not defined

- name: Define OCP Usage configuration defaults
  set_fact:
    ocp_usage_config_dir: '{{ ansible_env.HOME }}/.config/ocp_usage/{{ ocp_cluster_id }}/'
    ocp_usage_config_file: '{{ ansible_env.HOME }}/.config/ocp_usage/{{ ocp_cluster_id }}/config.json'
  when:
    - OCP_USAGE_CONFIG_DIR is not defined

- name: Define OCP Usage configuration
  set_fact:
    ocp_usage_config_dir: '{{ OCP_USAGE_CONFIG_DIR }}/{{ ocp_cluster_id }}/'
    ocp_usage_config_file: '{{ OCP_USAGE_CONFIG_DIR }}/{{ ocp_cluster_id }}/config.json'
  when:
    - OCP_USAGE_CONFIG_DIR is defined

- name: Create config data location
  file:
    path: '{{ ocp_usage_config_dir }}'
    state: directory
    mode: 0755

- name: Check that OCP Usage configuration exists
  stat:
    path: '{{ ocp_usage_config_file }}'
  register: ocp_usage_config_stat_result

- name: Fetch OCP config file
  fetch:
    src: '{{ ocp_usage_config_file }}'
    dest: '/tmp/ocp_config.json'
    flat: true
    fail_on_missing: true
  when:
    - ocp_usage_config_stat_result.stat.exists

- name: Read in OCP configuration file
  include_vars:
    file: '/tmp/ocp_config.json'
    name: config_content
  when:
    - ocp_usage_config_stat_result.stat.exists

- name: Read the OCP token
  command: 'cat {{ OCP_TOKEN_PATH }}'
  register: cat_token
  changed_when: false
  no_log: true

- name: Log in to OCP cluster
  command: '{{ OCP_CLI }} login {{ OCP_API }} {{ ocp_insecure_login }} --token {{ cat_token.stdout }}'
  when: cat_token.stdout is defined and cat_token
  no_log: true

- name: Define temp report file data location
  tempfile:
    state: directory
    suffix: 'korekuta-{{ ocp_cluster_id }}'
  register: 'ocp_temp_file_dir'

# tag block
- block:
    - name: Switch to Operator Metering project
      command: '{{ OCP_CLI }} project {{ OCP_METERING_NAMESPACE }}'
      register: oc_project
      changed_when: false

    - name: Check for hccm-usage-report Report
      command: '{{ OCP_CLI }} get Report {{ setup_usage_report_name }}'
      register: oc_get_report
      changed_when: false
      ignore_errors: true
      when:
        - oc_project.stdout is defined and oc_project

    - name: Check for hccm-usage-report ReportQuery
      command: '{{ OCP_CLI }} get ReportQuery {{ setup_usage_report_name }}'
      register: oc_get_report_generation_query
      changed_when: false
      ignore_errors: true
      when:
        - oc_project.stdout is defined and oc_project

    - name: Check for hccm-openshift-persistentvolumeclaim Report
      command: '{{ OCP_CLI }} get Report {{ setup_storage_report_name }}'
      register: oc_get_storage_report
      changed_when: false
      ignore_errors: true
      when:
        - oc_project.stdout is defined and oc_project

    - name: Check for hccm-openshift-persistentvolumeclaim ReportQuery
      command: '{{ OCP_CLI }} get ReportQuery {{ setup_storage_report_name }}'
      register: oc_get_storage_report_generation_query
      changed_when: false
      ignore_errors: true
      when:
        - oc_project.stdout is defined and oc_project

    - name: Copy hccm-usage-report files
      copy:
        src: '{{ item }}'
        dest: '{{ ocp_temp_file_dir.path }}'
      with_fileglob:
        - 'files/kube*'
        - 'files/pod*'
        - 'files/hccm*'
        - 'files/persistentvolume*'
      when:
        - oc_project.stdout is defined and oc_project
        - oc_get_report.rc is defined and  oc_get_report.rc != 0
        - oc_get_storage_report.rc is defined and  oc_get_storage_report.rc != 0
        - oc_get_report_generation_query.rc is defined and  oc_get_report_generation_query.rc != 0
        - oc_get_storage_report_generation_query.rc is defined and  oc_get_storage_report_generation_query.rc != 0

    - name: Create Operator Metering definitions
      command: '{{ OCP_CLI }} create -f {{ ocp_temp_file_dir.path }}'
      when:
        - oc_project.stdout is defined and oc_project
        - oc_get_report.rc is defined and  oc_get_report.rc != 0
        - oc_get_storage_report.rc is defined and  oc_get_storage_report.rc != 0
        - oc_get_report_generation_query.rc is defined and  oc_get_report_generation_query.rc != 0
        - oc_get_storage_report_generation_query.rc is defined and  oc_get_storage_report_generation_query.rc != 0
  tags:
    - setup
    - notest

- name: Create new setup data configuration
  template:
    src: 'templates/config.j2'
    dest: '{{ ocp_usage_config_file }}'
  when:
    - config_content is not defined
    - not ocp_usage_config_stat_result.stat.exists

- name: Replace setup data configuration
  template:
    src: 'templates/config.j2'
    dest: '{{ ocp_usage_config_file }}'
  when:
    - config_content is defined
    - config_content.get('ocp_api') != OCP_API
    - config_content.get('ocp_token_file') != OCP_TOKEN_PATH
    - config_content.get('ocp_cluster_id') != ocp_cluster_id
    - config_content.get('ocp_metering_namespace') != OCP_METERING_NAMESPACE
    - config_content.get('metering_api') != METERING_API

- name: Display New Cluster Identifier
  debug:
    msg: 'Use the value {{ ocp_cluster_id }} for the cluster identifier when configuring an OpenShift source for Cost Management.'
  when:
    - config_content is not defined

- name: Display Current Cluster Identifier
  debug:
    msg: 'Use the value {{ config_content.get("ocp_cluster_id") }} for the cluster identifier when configuring an OpenShift source for Cost Management.'
  when:
    - config_content is defined
