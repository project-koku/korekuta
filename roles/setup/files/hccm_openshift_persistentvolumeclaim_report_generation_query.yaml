---
apiVersion: metering.openshift.io/v1alpha1
kind: ReportGenerationQuery
metadata:
  name: hccm-openshift-persistentvolumeclaim
spec:
  columns:
    - name: report_period_start
      type: timestamp
      unit: date
    - name: report_period_end
      type: timestamp
      unit: date
    - name: interval_start
      type: timestamp
      unit: date
    - name: interval_end
      type: timestamp
      unit: date
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: persistentvolumeclaim
      type: string
      unit: kubernetes_persistentvolumeclaim
    - name: persistentvolume
      type: string
      unit: kubernetes_persistentvolume
    - name: storageclass
      type: string
      unit: kubernetes_storageclass
    - name: persistentvolumeclaim_capacity_bytes
      type: double
      unit: bytes
    - name: persistentvolumeclaim_capacity_byte_seconds
      type: double
      unit: byte_seconds
    - name: volume_request_storage_byte_seconds
      type: double
      unit: byte_seconds
    - name: persistentvolumeclaim_usage_byte_seconds
      type: double
      unit: byte_seconds
    - name: persistentvolume_labels
      type: string
    - name: persistentvolumeclaim_labels
      type: string
  inputs:
    - name: ReportingStart
    - name: ReportingEnd
  query: |
    WITH cte_hourly_persistentvolumeclaim_capacity AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        persistentvolumeclaim,
        max(persistentvolumeclaim_capacity_bytes) as persistentvolumeclaim_capacity_bytes,
        sum(persistentvolumeclaim_capacity_byte_seconds) as persistentvolumeclaim_capacity_byte_seconds
      FROM {| generationQueryViewName "persistentvolumeclaim-capacity-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, persistentvolumeclaim, date_trunc('hour', "timestamp")
    ),
    cte_hourly_persistentvolumeclaim_requests AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        persistentvolumeclaim,
        max(persistentvolume) as persistentvolume,
        max(storageclass) as storageclass,
        sum(volume_request_storage_byte_seconds) as volume_request_storage_byte_seconds
      FROM {| generationQueryViewName "persistentvolumeclaim-request-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, persistentvolumeclaim, date_trunc('hour', "timestamp")
    ),
    cte_hourly_persistentvolumeclaim_usage AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        persistentvolumeclaim,
        sum(persistentvolumeclaim_usage_byte_seconds) as persistentvolumeclaim_usage_byte_seconds
      FROM {| generationQueryViewName "persistentvolumeclaim-usage-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, persistentvolumeclaim, date_trunc('hour', "timestamp")
    ),
    cte_hourly_pvc_labels AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        persistentvolumeclaim,
        array_join(map_values(transform_values(map_filter(map_union(labels), (k, v) -> k LIKE 'label_%'), (k, v) -> concat(k, ':', v))), '|') as persistentvolumeclaim_labels
      FROM {| generationQueryViewName "persistentvolumeclaim-labels-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, persistentvolumeclaim, date_trunc('hour', "timestamp")
    ),
    cte_hourly_pv_labels AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        persistentvolume,
        array_join(map_values(transform_values(map_filter(map_union(labels), (k, v) -> k LIKE 'label_%'), (k, v) -> concat(k, ':', v))), '|') as persistentvolume_labels
      FROM {| generationQueryViewName "persistentvolume-labels-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, persistentvolume, date_trunc('hour', "timestamp")
    ),
    cte_pod_pvc_info AS (
      SELECT date_trunc('hour', "timestamp") as interval_start,
        namespace,
        pod,
        persistentvolumeclaim
      FROM {| generationQueryViewName "pod-persistentvolumeclaim-info-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
        AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY namespace, pod, persistentvolumeclaim, date_trunc('hour', "timestamp")
    )
    SELECT
      date_trunc('month', timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}') AS report_period_start,
      date_trunc('month', timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}')  + interval '1' month  AS report_period_end,
      PVCU.interval_start,
      PVCU.interval_start + interval '59' minute + interval '59' second as interval_end,
      PVCU.namespace,
      PVCI.pod,
      PVCU.persistentvolumeclaim,
      PVCR.persistentvolume,
      PVCR.storageclass,
      PVCC.persistentvolumeclaim_capacity_bytes,
      PVCC.persistentvolumeclaim_capacity_byte_seconds,
      PVCR.volume_request_storage_byte_seconds,
      PVCU.persistentvolumeclaim_usage_byte_seconds,
      PVCL.persistentvolumeclaim_labels,
      PVL.persistentvolume_labels
    FROM cte_hourly_persistentvolumeclaim_usage AS PVCU
    JOIN cte_hourly_persistentvolumeclaim_requests AS PVCR
        ON PVCU.namespace = PVCR.namespace
          AND PVCU.persistentvolumeclaim = PVCR.persistentvolumeclaim
          AND PVCU.interval_start = PVCR.interval_start
    JOIN cte_hourly_persistentvolumeclaim_capacity AS PVCC
        ON PVCU.namespace = PVCC.namespace
          AND PVCU.persistentvolumeclaim = PVCC.persistentvolumeclaim
          AND PVCU.interval_start = PVCC.interval_start
    LEFT JOIN cte_hourly_pvc_labels as PVCL
        ON PVCU.namespace = PVCL.namespace
          AND PVCU.persistentvolumeclaim = PVCL.persistentvolumeclaim
          AND PVCU.interval_start = PVCL.interval_start
    LEFT JOIN cte_hourly_pv_labels as PVL
        ON PVCR.namespace = PVL.namespace
          AND PVCR.persistentvolume = PVL.persistentvolume
          AND PVCR.interval_start = PVL.interval_start
    LEFT JOIN cte_pod_pvc_info as PVCI
        ON PVCU.namespace = PVCI.namespace
          AND PVCU.persistentvolumeclaim = PVCI.persistentvolumeclaim
          AND PVCU.interval_start = PVCI.interval_start
  reportQueries:
    - persistentvolumeclaim-capacity-raw
    - persistentvolumeclaim-request-raw
    - persistentvolumeclaim-usage-raw
    - persistentvolume-labels-raw
    - persistentvolumeclaim-labels-raw
    - pod-persistentvolumeclaim-info-raw
  view:
    disabled: true
